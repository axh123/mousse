#!/bin/sh
# mousse: CFD toolbox
# Copyright (C) 2011-2014 OpenFOAM Foundation
# Copyright (C) 2016 mousse project
#
# Script
#     wrmdepold
#
# Description
#     Usage: wrmdepold [dir1 .. dirN]
#
#     Remove *.dep files that are without a corresponding .C or .L source file.
#     This often occurs when a directory has been moved.
#         - print questionable directory and the *.dep file
#         - optionally remove empty directories

Script=${0##*/}

# Source the wmake functions
. ${0%/*}/scripts/wmake-functions

usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<- USAGE
	Usage: $Script [OPTION] [dir1 .. dirN]
	options:
	  -rmdir      find and remove empty directories (recursively)

	  Remove *.dep files that are without a corresponding .C or .L file.
	  This often occurs when a directory has been moved.
	    - print questionable directory and file
	    - optionally remove empty directories

	USAGE
	exit 1
}

# Parse arguments and options
unset opt_rmdir

# parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help | --help)
        usage
        ;;
    -rmdir | --rmdir)
        opt_rmdir=true
        shift
        ;;
    -*)
       usage "unknown option: '$*'"
       ;;
    *)
       break
       ;;
    esac
done

# Check environment variables
check_env

# Default is the current directory
[ "$#" -gt 0 ] || set -- .

for check_dir
do
    find_object_dir $check_dir

    if [ -d $objects_dir ]
    then
        echo "Searching: $objects_dir"
    else
        echo "Skipping non-dir: $objects_dir"
        continue
    fi

    find $objects_dir -name '*.dep' -print | while read dep_file
    do
        dep_to_source $dep_file

        # Check C++ or Flex source file exists
        if [ ! -r "$source_file" ];
        then
            echo "rm $dep_file"
            rm -f $dep_file 2>/dev/null
        fi
    done

    # Remove empty dirs
    if [ "$opt_rmdir" ]
    then
        # get subdirs ourselves so we can avoid particular directories
        for dir in $(find $objects_dir -mindepth 1 -maxdepth 1 -type d \( -name .git -prune -o -print \) )
        do
            echo "check dir: $dir"
            find $dir -depth -type d -empty -exec rmdir {} \; -print
        done
    fi
done

# vim: set ft=sh noet sw=4 ts=4 sts=4:
