// mousse: CFD toolbox
// Copyright (C) 2011-2012 OpenFOAM Foundation
// Copyright (C) 2016 mousse project
// Class
//   mousse::XiEqModels::instability
// Description
//   This is the equilibrium level of the flame wrinkling generated by
//   instability. It is a constant (default 2.5). It is used in
//   @link XiModel.H @endlink.
// SourceFiles
//   instability.cpp
#ifndef INSTABILITY_H
#define INSTABILITY_H
#include "xi_eq_model.hpp"
namespace mousse
{
namespace XiEqModels
{
class instability
:
  public XiEqModel
{
  // Private data
    //- Equilibrium Xi due to instability only
    scalar XiEqIn;
    //- Equilibrium Xi model due to all other effects
    autoPtr<XiEqModel> XiEqModel_;
public:
  //- Runtime type information
  TYPE_NAME("instability");
  // Constructors
    //- Construct from components
    instability
    (
      const dictionary& XiEqProperties,
      const psiuReactionThermo& thermo,
      const compressible::RASModel& turbulence,
      const volScalarField& Su
    );
    //- Disallow copy construct
    instability(const instability&) = delete;
    //- Disallow default bitwise assignment
    void operator=(const instability&) = delete;
  //- Destructor
  virtual ~instability();
  // Member Functions
    //- Return the flame-wrinking XiEq
    virtual tmp<volScalarField> XiEq() const;
    //- Update properties from given dictionary
    virtual bool read(const dictionary& XiEqProperties);
};
}  // namespace XiEqModels
}  // namespace mousse
#endif
