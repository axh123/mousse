global/global.cver
global/arg_list.cpp
global/clock.cpp

bools = primitives/bools
$(bools)/bool.cpp
$(bools)/bool_io.cpp
$(bools)/switch.cpp
$(bools)/switch_io.cpp
$(bools)/bool_list.cpp

chars = primitives/chars
$(chars)/char_io.cpp
$(chars)/wchar_io.cpp

ints = primitives/ints
$(ints)/uint32.cpp
$(ints)/uint32_io.cpp
$(ints)/uint64.cpp
$(ints)/uint64_io.cpp
$(ints)/uint_io.cpp
$(ints)/int32.cpp
$(ints)/int32_io.cpp
$(ints)/int64.cpp
$(ints)/int64_io.cpp
$(ints)/int_io.cpp
$(ints)/label.cpp
$(ints)/ulabel.cpp
$(ints)/label_io_list.cpp
$(ints)/label_list_io_list.cpp
#if defined(darwin64)
$(ints)/long.cpp
$(ints)/long_io.cpp
$(ints)/ulong.cpp
$(ints)/ulong_io.cpp
#endif

primitives/scalar/double_scalar.cpp
primitives/scalar/float_scalar.cpp
primitives/scalar/scalar.cpp
primitives/scalar/scalar_list.cpp
primitives/scalar/scalar_io_list.cpp
primitives/scalar/scalar_list_io_list.cpp

primitives/diag_tensor/diag_tensor.cpp
primitives/spherical_tensor/spherical_tensor.cpp
primitives/spherical_tensor/label_spherical_tensor.cpp
primitives/symm_tensor/label_symm_tensor.cpp
primitives/symm_tensor/symm_tensor.cpp
primitives/tensor/label_tensor.cpp
primitives/tensor/tensor.cpp
primitives/tensor/spherical_tensor_list.cpp
primitives/tensor/symm_tensor_list.cpp
primitives/tensor/tensor_list.cpp

primitives/vector/complex_vector.cpp
#if !defined(wm_sp)
primitives/vector/float_vector.cpp
#endif
primitives/vector/label_vector.cpp
primitives/vector/vector.cpp
primitives/vector/vector_list.cpp
primitives/vector/vector_io_list.cpp
primitives/vector/vector_list_io_list.cpp

primitives/tensor_2d/tensor_2d.cpp
primitives/spherical_tensor_2d/spherical_tensor_2d.cpp
primitives/symm_tensor_2d/symm_tensor_2d.cpp
primitives/vector_2d/vector_2d.cpp

primitives/complex/complex.cpp
primitives/global_index_and_transform/global_index_and_transform.cpp
primitives/global_index_and_transform/vector_tensor_transform.cpp
primitives/quaternion/quaternion.cpp
primitives/septernion/septernion.cpp
primitives/triad/triad.cpp

/* functions, data entries */
primitives/functions/make_data_entries.cpp
primitives/functions/polynomial_function.cpp

primitives/sub_model_base/sub_model_base.cpp

strings = primitives/strings
$(strings)/string.cpp
$(strings)/string_io.cpp
$(strings)/string_io_list.cpp
$(strings)/word.cpp
$(strings)/word_io.cpp
$(strings)/word_io_list.cpp
$(strings)/file_name.cpp
$(strings)/file_name_io.cpp
$(strings)/key_type.cpp
$(strings)/word_re.cpp
$(strings)/hashed_word_list.cpp
$(strings)/string_ops.cpp

primitives/hashes/hasher.cpp
primitives/hashes/sha1.cpp
primitives/hashes/sha1_digest.cpp

primitives/random/random.cpp
primitives/random/cached_random.cpp

ranges = primitives/ranges
$(ranges)/label_range.cpp
$(ranges)/label_ranges.cpp
$(ranges)/scalar_range.cpp
$(ranges)/scalar_ranges.cpp

containers/hash_tables/hash_table_core.cpp
containers/hash_tables/static_hash_table_core.cpp
containers/lists/par_sortable_list_name.cpp
containers/lists/packed_list_core.cpp
containers/lists/packed_bool_list.cpp
containers/lists/list_ops.cpp
containers/linked_lists/sl_list_base.cpp
containers/linked_lists/dl_list_base.cpp

streams = db/iostreams
$(streams)/token/token_io.cpp

iostreams = $(streams)/iostreams
$(iostreams)/iostream.cpp
$(iostreams)/istream.cpp
$(iostreams)/ostream.cpp

sstreams = $(streams)/sstreams
$(sstreams)/isstream.cpp
$(sstreams)/osstream.cpp
$(sstreams)/sstreams_print.cpp
$(sstreams)/read_hex_label.cpp
$(sstreams)/prefix_osstream.cpp

gzstream = $(streams)/gzstream
$(gzstream)/gzstream.cpp

fstreams = $(streams)/fstreams
$(fstreams)/ifstream.cpp
$(fstreams)/ofstream.cpp

tstreams = $(streams)/tstreams
$(tstreams)/itstream.cpp

string_streams = $(streams)/string_streams
$(string_streams)/string_streams_print.cpp

pstreams = $(streams)/pstreams
$(pstreams)/uipstream.cpp
$(pstreams)/ipstream.cpp
/* $(_pstreams)/u_pstream.c in global._cver */
$(pstreams)/upstream_comms_struct.cpp
$(pstreams)/pstream.cpp
$(pstreams)/uopstream.cpp
$(pstreams)/opstream.cpp
$(pstreams)/pstream_buffers.cpp

dictionary = db/dictionary
$(dictionary)/dictionary.cpp
$(dictionary)/dictionary_io.cpp
$(dictionary)/entry.cpp
$(dictionary)/entry_io.cpp
$(dictionary)/primitive_entry.cpp
$(dictionary)/primitive_entry_io.cpp
$(dictionary)/dictionary_entry.cpp
$(dictionary)/dictionary_entry_io.cpp

function_entries = $(dictionary)/function_entries
$(function_entries)/calc_entry.cpp
$(function_entries)/code_stream.cpp
$(function_entries)/function_entry.cpp
$(function_entries)/include_entry.cpp
$(function_entries)/include_etc_entry.cpp
$(function_entries)/include_if_present_entry.cpp
$(function_entries)/input_mode_entry.cpp
$(function_entries)/remove_entry.cpp

db/ioobjects/iodictionary.cpp
db/ioobjects/iodictionary_io.cpp
db/ioobjects/iomap_name.cpp

ioobject = db/ioobject
$(ioobject)/ioobject.cpp
$(ioobject)/ioobject_io.cpp
$(ioobject)/ioobject_read_header.cpp
$(ioobject)/ioobject_write_header.cpp

reg_ioobject = db/reg_ioobject
$(reg_ioobject)/reg_ioobject_read.cpp
$(reg_ioobject)/reg_ioobject_write.cpp

db/ioobject_list/ioobject_list.cpp
db/object_registry/object_registry.cpp
db/callback_registry/callback_registry_name.cpp

dll = db/dynamic_library
$(dll)/dl_library_table.cpp
$(dll)/dynamic_code.cpp
$(dll)/dynamic_code_context.cpp
$(dll)/coded_base.cpp

db/function_objects/function_object.cpp
db/function_objects/function_object_list.cpp
db/function_objects/function_object_file.cpp
db/function_objects/output_filter_output_control.cpp

time = db/time
$(time)/time_paths.cpp
$(time)/time_state.cpp
$(time)/time.cpp
$(time)/time_io.cpp
$(time)/find_times.cpp
$(time)/sub_cycle_time.cpp
$(time)/find_instance.cpp
$(time)/time_selector.cpp
$(time)/instant/instant.cpp

dimension_set/dimension_set.cpp
dimension_set/dimension_set_io.cpp
dimension_set/dimension_sets.cpp
dimensioned_types/dimensioned_scalar.cpp
dimensioned_types/dimensioned_spherical_tensor.cpp
dimensioned_types/dimensioned_symm_tensor.cpp
dimensioned_types/dimensioned_tensor.cpp

matrices/solution/solution.cpp

scalar_matrices = matrices/scalar_matrices
$(scalar_matrices)/scalar_matrices.cpp
$(scalar_matrices)/svd/svd.cpp

luscalar_matrix = matrices/luscalar_matrix
$(luscalar_matrix)/_luscalar_matrix.cpp
$(luscalar_matrix)/proc_ldu_matrix.cpp
$(luscalar_matrix)/proc_ldu_interface.cpp

ldu_matrix = matrices/ldu_matrix
$(ldu_matrix)/ldu_matrix/ldu_matrix.cpp
$(ldu_matrix)/ldu_matrix/ldu_matrix_operations.cpp
$(ldu_matrix)/ldu_matrix/ldu_matrix_at_mul.cpp
$(ldu_matrix)/ldu_matrix/ldu_matrix_update_matrix_interfaces.cpp
$(ldu_matrix)/ldu_matrix/ldu_matrix_solver.cpp
$(ldu_matrix)/ldu_matrix/ldu_matrix_smoother.cpp
$(ldu_matrix)/ldu_matrix/ldu_matrix_preconditioner.cpp

$(ldu_matrix)/solvers/diagonal_solver.cpp
$(ldu_matrix)/solvers/smooth_solver.cpp
$(ldu_matrix)/solvers/pcg.cpp
$(ldu_matrix)/solvers/pbicg.cpp
$(ldu_matrix)/solvers/iccg.cpp
$(ldu_matrix)/solvers/biccg.cpp

$(ldu_matrix)/smoothers/gauss_seidel_smoother.cpp
$(ldu_matrix)/smoothers/sym_gauss_seidel_smoother.cpp
$(ldu_matrix)/smoothers/non_blocking_gauss_seidel_smoother.cpp
$(ldu_matrix)/smoothers/dic_smoother.cpp
$(ldu_matrix)/smoothers/fdic_smoother.cpp
$(ldu_matrix)/smoothers/dic_gauss_seidel_smoother.cpp
$(ldu_matrix)/smoothers/dilu_smoother.cpp
$(ldu_matrix)/smoothers/dilu_gauss_seidel_smoother.cpp

$(ldu_matrix)/preconditioners/no_preconditioner.cpp
$(ldu_matrix)/preconditioners/diagonal_preconditioner.cpp
$(ldu_matrix)/preconditioners/dic_preconditioner.cpp
$(ldu_matrix)/preconditioners/fdic_preconditioner.cpp
$(ldu_matrix)/preconditioners/dilu_preconditioner.cpp
$(ldu_matrix)/preconditioners/gamg_preconditioner.cpp

ldu_addressing = $(ldu_matrix)/ldu_addressing
$(ldu_addressing)/ldu_addressing.cpp
$(ldu_addressing)/ldu_interface/ldu_interface.cpp
$(ldu_addressing)/ldu_interface/processor_ldu_interface.cpp
$(ldu_addressing)/ldu_interface/cyclic_ldu_interface.cpp

ldu_interface_fields = $(ldu_addressing)/ldu_interface_fields
$(ldu_interface_fields)/ldu_interface_field.cpp
$(ldu_interface_fields)/processor_ldu_interface_field.cpp
$(ldu_interface_fields)/cyclic_ldu_interface_field.cpp

gamg = $(ldu_matrix)/solvers/gamg
$(gamg)/gamg_solver.cpp
$(gamg)/gamg_solver_agglomerate_matrix.cpp
$(gamg)/gamg_solver_interpolate.cpp
$(gamg)/gamg_solver_scale.cpp
$(gamg)/gamg_solver_solve.cpp

gamg_interfaces = $(gamg)/interfaces
$(gamg_interfaces)/gamg_interface.cpp
$(gamg_interfaces)/gamg_interface_new.cpp
$(gamg_interfaces)/processor_gamg_interface.cpp
$(gamg_interfaces)/processor_cyclic_gamg_interface.cpp
$(gamg_interfaces)/cyclic_gamg_interface.cpp

gamg_interface_fields = $(gamg)/interface_fields
$(gamg_interface_fields)/gamg_interface_field.cpp
$(gamg_interface_fields)/gamg_interface_field_new.cpp
$(gamg_interface_fields)/processor_gamg_interface_field.cpp
$(gamg_interface_fields)/processor_cyclic_gamg_interface_field.cpp
$(gamg_interface_fields)/cyclic_gamg_interface_field.cpp

gamg_agglomerations = $(gamg)/gamg_agglomerations

$(gamg_agglomerations)/gamg_agglomeration.cpp
$(gamg_agglomerations)/gamg_agglomerate_ldu_addressing.cpp
$(gamg_agglomerations)/pair_gamg_agglomeration.cpp
$(gamg_agglomerations)/pair_gamg_agglomerate.cpp
$(gamg_agglomerations)/algebraic_pair_gamg_agglomeration.cpp
$(gamg_agglomerations)/dummy_agglomeration.cpp

gamg_proc_agglomerations = $(gamg)/gamg_proc_agglomerations

$(gamg_proc_agglomerations)/gamg_proc_agglomeration.cpp
$(gamg_proc_agglomerations)/master_coarsest_gamg_proc_agglomeration.cpp
$(gamg_proc_agglomerations)/manual_gamg_proc_agglomeration.cpp
$(gamg_proc_agglomerations)/eager_gamg_proc_agglomeration.cpp
$(gamg_proc_agglomerations)/none_gamg_proc_agglomeration.cpp
$(gamg_proc_agglomerations)/proc_faces_gamg_proc_agglomeration.cpp

meshes/ldu_mesh.cpp
meshes/ldu_primitive_mesh.cpp

_ldu_matrix = matrices/_ldu_matrix
$(_ldu_matrix)/_ldu_matrix/ldu_matrices.cpp
$(_ldu_matrix)/_ldu_matrix/solver_performance.cpp
$(_ldu_matrix)/_ldu_matrix/_ldu_interface_fields.cpp
$(_ldu_matrix)/_smoothers/ldu_smoothers.cpp
$(_ldu_matrix)/_preconditioners/ldu_preconditioners.cpp
$(_ldu_matrix)/_solvers/ldu_solvers.cpp

primitive_shapes = meshes/primitive_shapes

$(primitive_shapes)/line.cpp
$(primitive_shapes)/plane.cpp
$(primitive_shapes)/intersection.cpp
$(primitive_shapes)/point_index_hit_io_list.cpp

mesh_shapes = meshes/mesh_shapes
$(mesh_shapes)/edge.cpp
$(mesh_shapes)/edge_io_list.cpp
$(mesh_shapes)/face.cpp
$(mesh_shapes)/face_intersection.cpp
$(mesh_shapes)/face_contact_sphere.cpp
$(mesh_shapes)/face_area_in_contact.cpp
$(mesh_shapes)/face_io_list.cpp
$(mesh_shapes)/cell.cpp
$(mesh_shapes)/opposite_cell_face.cpp
$(mesh_shapes)/cell_io_list.cpp
$(mesh_shapes)/tet_cell.cpp
$(mesh_shapes)/cell_modeller.cpp
$(mesh_shapes)/cell_model.cpp
$(mesh_shapes)/cell_model_io.cpp
$(mesh_shapes)/cell_shape.cpp
$(mesh_shapes)/cell_shape_equal.cpp
$(mesh_shapes)/cell_shape_io.cpp
$(mesh_shapes)/cell_shape_io_list.cpp

meshes/identifiers/patch_identifier.cpp
meshes/identifiers/couple_group_identifier.cpp

meshes/mesh_object.cpp

poly_mesh = meshes/poly_mesh

poly_patches = $(poly_mesh)/poly_patches
$(poly_patches)/poly_patch.cpp
$(poly_patches)/poly_patch_new.cpp
$(poly_patches)/coupled_poly_patch.cpp
$(poly_patches)/generic_poly_patch.cpp
$(poly_patches)/cyclic_poly_patch.cpp
$(poly_patches)/cyclic_slip_poly_patch.cpp
$(poly_patches)/old_cyclic_poly_patch.cpp
$(poly_patches)/empty_poly_patch.cpp
$(poly_patches)/nonuniform_transform_cyclic_poly_patch.cpp
$(poly_patches)/processor_cyclic_poly_patch.cpp
$(poly_patches)/processor_poly_patch.cpp
$(poly_patches)/symmetry_plane_poly_patch.cpp
$(poly_patches)/symmetry_poly_patch.cpp
$(poly_patches)/wedge_poly_patch.cpp
$(poly_patches)/wall_poly_patch.cpp

$(poly_mesh)/poly_boundary_mesh.cpp
$(poly_mesh)/poly_boundary_mesh_entries.cpp

meshes/comm_schedule.cpp

$(poly_mesh)/global_mesh_data.cpp
$(poly_mesh)/global_points.cpp
$(poly_mesh)/global_index.cpp

$(poly_mesh)/sync_tools.cpp
$(poly_mesh)/poly_mesh_tet_decomposition.cpp
$(poly_mesh)/tet_indices.cpp

zones = meshes/poly_mesh/zones
$(zones)/zone.cpp
$(zones)/cell_zone.cpp
$(zones)/cell_zone_new.cpp
$(zones)/face_zone.cpp
$(zones)/face_zone_new.cpp
$(zones)/point_zone.cpp
$(zones)/point_zone_new.cpp

$(poly_mesh)/poly_mesh.cpp
$(poly_mesh)/poly_mesh_from_shape_mesh.cpp
$(poly_mesh)/poly_mesh_io.cpp
$(poly_mesh)/poly_mesh_init_mesh.cpp
$(poly_mesh)/poly_mesh_clear.cpp
$(poly_mesh)/poly_mesh_update.cpp
$(poly_mesh)/poly_mesh_check.cpp
$(poly_mesh)/poly_mesh_tools.cpp

primitive_mesh = meshes/primitive_mesh
$(primitive_mesh)/primitive_mesh.cpp
$(primitive_mesh)/primitive_mesh_cell_cells.cpp
$(primitive_mesh)/primitive_mesh_cell_centres_and_vols.cpp
$(primitive_mesh)/primitive_mesh_cell_edges.cpp
$(primitive_mesh)/primitive_mesh_cells.cpp
$(primitive_mesh)/primitive_mesh_clear.cpp
$(primitive_mesh)/primitive_mesh_edge_cells.cpp
$(primitive_mesh)/primitive_mesh_edge_faces.cpp
$(primitive_mesh)/primitive_mesh_edges.cpp
$(primitive_mesh)/primitive_mesh_face_centres_and_areas.cpp
$(primitive_mesh)/primitive_mesh_find_cell.cpp
$(primitive_mesh)/primitive_mesh_point_cells.cpp
$(primitive_mesh)/primitive_mesh_point_faces.cpp
$(primitive_mesh)/primitive_mesh_point_points.cpp
$(primitive_mesh)/primitive_mesh_cell_points.cpp
$(primitive_mesh)/primitive_mesh_calc_cell_shapes.cpp
$(primitive_mesh)/primitive_mesh_check.cpp
$(primitive_mesh)/primitive_mesh_check_point_nearness.cpp
$(primitive_mesh)/primitive_mesh_check_edge_length.cpp
$(primitive_mesh)/primitive_mesh_tools.cpp
$(primitive_mesh)/patch_zones.cpp
$(primitive_mesh)/walk_patch.cpp

$(mesh_shapes)/cell_matcher.cpp
$(mesh_shapes)/hex_matcher.cpp
$(mesh_shapes)/wedge_matcher.cpp
$(mesh_shapes)/prism_matcher.cpp
$(mesh_shapes)/pyr_matcher.cpp
$(mesh_shapes)/tet_wedge_matcher.cpp
$(mesh_shapes)/tet_matcher.cpp
$(mesh_shapes)/degenerate_matcher.cpp

map_poly_mesh = $(poly_mesh)/map_poly_mesh
$(map_poly_mesh)/map_poly_mesh.cpp
$(map_poly_mesh)/face_mapper.cpp
$(map_poly_mesh)/cell_mapper.cpp
$(map_poly_mesh)/map_distribute.cpp
$(map_poly_mesh)/map_distribute_poly_mesh.cpp
$(map_poly_mesh)/iomap_distribute.cpp
$(map_poly_mesh)/map_added_poly_mesh.cpp

$(primitive_mesh)/_primitive_patch_name.cpp

point_mesh = meshes/point_mesh
$(point_mesh)/point_mesh.cpp
$(point_mesh)/point_mapper.cpp
$(point_mesh)/point_patch_mapper.cpp

point_patches = $(point_mesh)/point_patches
$(point_patches)/point_patch.cpp
$(point_patches)/face_point_patch.cpp
$(point_patches)/face_point_patch_new.cpp
$(point_patches)/coupled_point_patch.cpp
$(point_patches)/generic_point_patch.cpp
$(point_patches)/cyclic_point_patch.cpp
$(point_patches)/cyclic_slip_point_patch.cpp
$(point_patches)/empty_point_patch.cpp
$(point_patches)/nonuniform_transform_cyclic_point_patch.cpp
$(point_patches)/processor_point_patch.cpp
$(point_patches)/processor_cyclic_point_patch.cpp
$(point_patches)/symmetry_plane_point_patch.cpp
$(point_patches)/symmetry_point_patch.cpp
$(point_patches)/wedge_point_patch.cpp
$(point_patches)/coupled_face_point_patch.cpp
$(point_patches)/wall_point_patch.cpp

$(point_mesh)/point_boundary_mesh.cpp

meshes/bound_box.cpp
meshes/tree_bound_box.cpp

meshes/match_points.cpp

fields/uniform_dimensioned_fields/uniform_dimensioned_fields.cpp
fields/cloud/cloud.cpp

fields = fields/fields
$(fields)/label_field.cpp
$(fields)/scalar_field.cpp
$(fields)/spherical_tensor_field.cpp
$(fields)/diag_tensor_field.cpp
$(fields)/symm_tensor_field.cpp
$(fields)/tensor_field.cpp
$(fields)/quaternion_field.cpp
$(fields)/triad_field.cpp
$(fields)/complex_fields.cpp

$(fields)/label_io_field.cpp
$(fields)/label_field_io_field.cpp
$(fields)/scalar_io_field.cpp
$(fields)/scalar_field_io_field.cpp
$(fields)/vector_io_field.cpp
$(fields)/vector_field_io_field.cpp
$(fields)/vector_2d_io_field.cpp
$(fields)/vector_2d_field_io_field.cpp
$(fields)/spherical_tensor_io_field.cpp
$(fields)/spherical_tensor_field_io_field.cpp
$(fields)/diag_tensor_io_field.cpp
$(fields)/diag_tensor_field_io_field.cpp
$(fields)/symm_tensor_io_field.cpp
$(fields)/symm_tensor_field_io_field.cpp
$(fields)/tensor_io_field.cpp
$(fields)/tensor_field_io_field.cpp
$(fields)/quaternion_io_field.cpp
$(fields)/triad_io_field.cpp
$(fields)/transform_field.cpp

point_patch_fields = fields/point_patch_fields
$(point_patch_fields)/point_patch_field/point_patch_fields.cpp

basic_point_patch_fields = $(point_patch_fields)/basic
$(basic_point_patch_fields)/calculated_point_patch_fields.cpp
$(basic_point_patch_fields)/coupled_point_patch_fields.cpp
$(basic_point_patch_fields)/value_point_patch_fields.cpp
$(basic_point_patch_fields)/fixed_value_point_patch_fields.cpp
$(basic_point_patch_fields)/zero_gradient_point_patch_fields.cpp

constraint_point_patch_fields = $(point_patch_fields)/constraint
$(constraint_point_patch_fields)/cyclic_point_patch_fields.cpp
$(constraint_point_patch_fields)/cyclic_slip_point_patch_fields.cpp
$(constraint_point_patch_fields)/empty_point_patch_fields.cpp
$(constraint_point_patch_fields)/nonuniform_transform_cyclic_point_patch_fields.cpp
$(constraint_point_patch_fields)/processor_point_patch_fields.cpp
$(constraint_point_patch_fields)/processor_cyclic_point_patch_fields.cpp
$(constraint_point_patch_fields)/symmetry_plane_point_patch_fields.cpp
$(constraint_point_patch_fields)/symmetry_point_patch_fields.cpp
$(constraint_point_patch_fields)/wedge_point_patch_fields.cpp

derived_point_patch_fields = $(point_patch_fields)/derived
$(derived_point_patch_fields)/slip_point_patch_fields.cpp
$(derived_point_patch_fields)/fixed_normal_slip_point_patch_fields.cpp
$(derived_point_patch_fields)/uniform_fixed_value_point_patch_fields.cpp
$(derived_point_patch_fields)/time_varying_uniform_fixed_value_point_patch_fields.cpp
$(derived_point_patch_fields)/coded_fixed_value_point_patch_fields.cpp

fields/geometric_fields/point_fields.cpp

meshes/band_compression.cpp
meshes/preserve_patch_types.cpp

interpolations = interpolations
$(interpolations)/patch_to_patch_interpolation_name.cpp
$(interpolations)/table_readers/table_readers.cpp
$(interpolations)/table_readers/open_foam_table_readers.cpp
$(interpolations)/table_readers/csv_table_readers.cpp
$(interpolations)/interpolation_weights.cpp
$(interpolations)/linear_interpolation_weights.cpp
$(interpolations)/spline_interpolation_weights.cpp

algorithms/indexed_octree_name.cpp
algorithms/tree_data_cell.cpp
algorithms/volume_type.cpp
algorithms/dynamic_indexed_octree_name.cpp
algorithms/dynamic_tree_data_point.cpp

graph/curve.cpp
graph/graph.cpp

writers = graph/writers
$(writers)/raw_graph.cpp
$(writers)/gnuplot_graph.cpp
$(writers)/xmgr_graph.cpp
$(writers)/jplot_graph.cpp

meshes/data.cpp

LIB =  $(MOUSSE_LIBBIN)/libmousse_core
