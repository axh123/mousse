# mousse: CFD toolbox
# Copyright (C) 2011-2015 OpenFOAM Foundation
# Copyright (C) 2016 mousse project
# Script
#     clean-functions
#
# Description
#     Miscellaneous cleanup functions for tutorial cases

#cleanTimeDirectories()
#{
#    echo "Cleaning $PWD case"
#    for time in $(foamInfoExec -times)
#    do
#        # keep 0 and constant directories
#        [ "$time" = "0" -o "$time" = constant ] || {
#            echo "Deleting directory $time"
#            rm -rf $time > /dev/null 2>&1
#        }
#    done
#    rm -rf {log,log.*,log-*,logSummary.*,.fxLock,*.xml,ParaView*,paraFoam*,*.OpenFOAM} > /dev/null 2>&1
#}

cleanTimeDirectories()
{
    echo "Cleaning $PWD case"
    zeros=""
    while [ ${#zeros} -lt 8 ]
    do
        timeDir="0.${zeros}[1-9]*"
        rm -rf ./${timeDir} ./-${timeDir} > /dev/null 2>&1
        zeros="0$zeros"
    done
    rm -rf ./[1-9]* ./-[1-9]* ./log ./log.* ./log-* ./logSummary.* ./.fxLock ./*.xml ./ParaView* ./paraFoam* ./*.OpenFOAM ./*.blockMesh ./.setSet > /dev/null 2>&1
}


#
# Remove dynamic_code subdirectory if it looks appropriate
#
cleanDynamicCode()
{
    if [ -d system -a -d dynamic_code ]
    then
        rm -rf dynamic_code > /dev/null 2>&1
    fi
}


cleanCase()
{
    cleanTimeDirectories
    cleanDynamicCode

    rm -rf processor* > /dev/null 2>&1
    rm -rf postProcessing > /dev/null 2>&1
    rm -rf probes* > /dev/null 2>&1
    rm -rf forces* > /dev/null 2>&1
    rm -rf graphs* > /dev/null 2>&1
    rm -rf sets > /dev/null 2>&1
    rm -rf surfaceSampling > /dev/null 2>&1
    rm -rf cuttingPlane > /dev/null 2>&1
    rm -rf system/machines > /dev/null 2>&1

    if [ -d constant/polyMesh ]
    then
        (cd constant/polyMesh && \
            rm -rf \
            allOwner* cell* face* meshModifiers* \
            owner* neighbour* point* edge* \
            cellLevel* pointLevel* refinementHistory* level0Edge* surfaceIndex* sets \
            boundary \
            > /dev/null 2>&1 \
        )
    fi
    (cd constant && \
        rm -rf \
        cellToRegion cellLevel* pointLevel* \
        > /dev/null 2>&1 \
    )

    rm -rf constant/tetDualMesh > /dev/null 2>&1

    rm -rf VTK > /dev/null 2>&1
    rm -f 0/cellLevel 0/pointLevel 0/cellDist constant/cellDecomposition

    if [ -e system/blockMeshDict.m4 ]
    then
        rm -f system/blockMeshDict > /dev/null 2>&1
    fi
}

removeCase()
{
    echo "Removing ${1:-unknown} case"
    rm -rf $1
}

cleanSamples()
{
    rm -rf ./sets ./samples ./sampleSurfaces > /dev/null 2>&1
}

cleanUcomponents()
{
    rm -rf 0/Ux 0/Uy 0/Uz > /dev/null 2>&1
}

cleanApplication()
{
    echo "Cleaning $PWD application"
    wclean
}
