#!/bin/bash
# mousse: CFD toolbox
# Copyright (C) 2011-2014 OpenFOAM Foundation
# Copyright (C) 2016 mousse project
# Script
#     mousse-exec
#
# Description
#     Usage: mousse_exec [-v MOUSSE_VERSION] <mousse-command> ...
#
#     Runs the <MOUSSE_VERSION> version of executable <mousse-command>
#     with the rest of the arguments.
#
#     Can also be used for parallel runs. For example,
#     \code
#         mpirun -np <NPROCS> \
#             mousse-exec -version <MOUSSE_VERSION> <mousse-command> ... -parallel
#     \endcode
#
# Note
#     This script must exist in <mousseInstall>/<VERSION>/bin
#
#     mousse-etc-file must be found in the same directory as this script
#
# SeeAlso
#    mousse-etc-file

usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

Usage: ${0##*/} [OPTION] <application> ...

options:
  -prefix <dir>     specify an alternative installation prefix
                    pass through to mousse-etc-file and set as MOUSSE_INST_DIR
  -version <ver>    specify an alternative mousse version
                    pass through to mousse-etc-file
  -help             print the usage

* run a particular mousse version of <application>

USAGE
    exit 1
}

#-------------------------------------------------------------------------------

# the bin dir:
bin_dir="${0%/*}"

# the project dir:
project_dir="${bin_dir%/bin}"

# the prefix dir (same as mousseInstall):
prefix_dir="${project_dir%/*}"

unset etc_opts version
# parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help | --help)
        usage
        ;;
    -m | -mode | --mode)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        etc_opts="$etc_opts $1 $2"
        shift
        ;;
    -p | -prefix | --prefix)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        etc_opts="$etc_opts $1 $2"
        prefix_dir="$2"
        shift
        ;;
    -v | -version | --version)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        etc_opts="$etc_opts $1 $2"
        version="$2"
        shift
        ;;
    --)
        shift
        break
        ;;
    -*)
        usage "invalid option '$1'"
        ;;
    *)
        break
        ;;
    esac
    shift
done

# Find and source mousse settings (bashrc)
# placed in function to preserve command-line arguments
source_rc()
{
    mousse_dot_file="$($bin_dir/mousse-etc-file $etc_opts bashrc)" || {
        echo "Error : bashrc file could not be found for mousse-${version:-${WM_PROJECT_VERSION:-???}}" 1>&2
        exit 1
    }

    # set to consistent value before sourcing the bashrc
    export MOUSSE_INST_DIR="$prefix_dir"

    . $mousse_dot_file $MOUSSE_SETTINGS
}

[ "$#" -ge 1 ] || usage "no application specified"

source_rc
exec "$@"
