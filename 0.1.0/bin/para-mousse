#!/bin/sh
#
# Copyright (C) 2011-2015 OpenFOAM Foundation
# Copyright (C) 2016 mousse project
#
# Script
#   para-mousse
#
# Description
#   touch *.foam file and start paraview with corresponding options.

usage() {
	exec 1>&2
	while [ "$#" -ge 1 ]; do echo "$1"; shift; done
	cat<<USAGE

Usage: ${0##*/} [OPTION] [PARAVIEW_OPTION]
options:
  -case <dir>       specify alternative case directory, default is the cwd
  -region <name>    specify alternative mesh region
  -touch            only create the *.foam file
  -help             print the usage


paraview options start with a double dashes

USAGE
	exit 1
}

# We want to do nice exit when running paraview to give paraview opportunity
# to clean up
unset MOUSSE_ABORT

unset REGION_NAME OPT_TOUCH

# Hack: change all locale to 'C' i.e. using '.' for decimal point. This is
# only needed temporarily until paraview is locale aware. (git version is
# already 2010-07)
export LC_ALL=C

# Reader extension
EXTENSION=foam
REQUIRE_PV=0

# Parse options
while [ "$#" -gt 0 ]
do
	case "$1" in
	-h | -help | --help)
		usage
		;;
	-c | -case | --case)
		[ "$#" -ge 2 ] || usage "'$1' option requires an argument"
		cd "$2" 2>/dev/null || usage "directory does not exist:  '$2'"
		shift 2
		;;
	-region | --region)
		[ "$#" -ge 2 ] || usage "'$1' option requires an argument"
		REGION_NAME=$2
		shift 2
		;;
	-touch | --touch)
		OPT_TOUCH=Y
		shift
		;;
	--)
		shift
		break    # Stop here, treat balance as paraview options
		;;
	--*)
		break    # Stop here, treat this and balance as paraview options
		;;
	*)
		usage "unknown option/argument: '$*'"
		;;
	esac
done

# Check for --data=... argument
has_data_arg()
{
	HAS_DATA=N
	while [ "$#" -gt 0 ]
	do
		case "$1" in
		(--data=*)
			HAS_DATA=Y
			break
			;;
		esac
		shift
	done
}

has_data_arg $@

# Get a sensible caseName from the directory name
CASE_NAME=${PWD##*/}
CASE_FILE="$CASE_NAME.$EXTENSION"
FV_CONTROLS="system"

if [ -n "$REGION_NAME" ]
then
	if [ ! -d constant/$REGION_NAME ]
	then
		echo "FATAL ERROR: Region $REGION_NAME does not exist"
		exit 1
	else
		CASE_FILE="$CASE_NAME{$REGION_NAME}.$EXTENSION"
		FV_CONTROLS="$FV_CONTROLS/$REGION_NAME"
	fi
fi

if [ "x$OPT_TOUCH" = "xY" ]
then
	touch "$CASE_FILE"
	echo "Created '$CASE_FILE'"
	exit 0
fi

# Parent directory for normal or parallel results
case "$CASE_NAME" in
processor*) PARENT_DIR=".." ;;
*)          PARENT_DIR="."  ;;
esac


if [ "x${HAS_DATA:-N}" = "xY" ]
then
	# Has --data=.., send directly to paraview
	exec paraview "$@"
else
	# Check existence of essential files
	WARN="WARN file does not exist:"
	for check in \
		system/controlDict \
		$FV_CONTROLS/fvSchemes \
		$FV_CONTROLS/fvSolution
	do
		[ -s "$PARENT_DIR/$check" ] || {
		[ -n "$WARN" ] && echo "$WARN" 1>&2
		echo "    $PARENT_DIR/$check" 1>&2
		unset WARN
		}
	done

	[ -n "$WARN" ] || {
	echo "Cannot locate mousse-format case files"
	echo -n "Would you like to open ParaView anyway <Y|n>:"
	read OPEN
	[ "$OPEN" = "" ] || echo $open | grep -iqE "^y" && paraview
	exit
	}

	# Only create/remove CASE_FILE if it didn't already exist
	[ -e $CASE_FILE ] || {
	trap "rm -f $CASE_FILE 2>/dev/null; exit 0" EXIT TERM INT
	touch "$CASE_FILE"
	echo "Created temporary '$CASE_FILE'"
	}

	paraview --data="$CASE_FILE" "$@" 2>&1
fi

# vim: set ft=sh noet sw=2 ts=2 sts=2:
