#!/bin/sh
# mousse: CFD toolbox
# Copyright (C) 2011-2014 OpenFOAM Foundation
# Copyright (C) 2016 mousse project
#
# Script
#   mousse-clean-poly-mesh
#
# Description
#  Remove the contents of the constant/polyMesh directory
#  as per the mousse::polyMesh::removeFiles() method.

usage() {
	exec 1>&2
	while [ "$#" -ge 1 ]; do echo "$1"; shift; done
	cat <<- USAGE

	Usage: ${0##*/} [OPTION]
	options:
	  -case <dir>       specify alternative case directory, default is the cwd
	  -region <name>    specify alternative mesh region
	  -help             print the usage

	Remove the contents of the constant/polyMesh directory as per the
	mousse::polyMesh::removeFiles() method.

	USAGE
	exit 1
}

unset case_dir region_name

# parse a single option
while [ "$#" -gt 0 ]
do
	case "$1" in
	-h | -help | --help)
		usage
		;;
	-case | --case | -c)
		[ "$#" -ge 2 ] || usage "'$1' option requires an argument"
		cd "$2" 2>/dev/null || usage "directory does not exist:  '$2'"
		case_dir=$2
		shift 2
		;;
	-region | --region | -r)
		[ "$#" -ge 2 ] || usage "'$1' option requires an argument"
		region_name=$2
		shift 2
		;;
	*)
		usage "unknown option/argument: '$*'"
		;;
	esac
done

if [ -n "$region_name" ]
then
	mesh_dir=$region_name/polyMesh
else
	mesh_dir=polyMesh
fi

# if -case was specified: insist upon 'constant/polyMesh'
if [ -n "$case_dir" ]
then
	if [ -d constant/$mesh_dir ]
	then
		# use constant/polyMesh
		mesh_dir=constant/$mesh_dir
	else
		echo "Error: no 'constant/$mesh_dir' in $case_dir" 1>&2
		exit 1
	fi
else
	if [ -d constant/$mesh_dir ]
	then
		# use constant/polyMesh
		mesh_dir=constant/$mesh_dir
	elif [ -d $mesh_dir ]
	then
		# likely already in constant/ - do not adjust anything
		:
	elif [ "${PWD##*/}" = polyMesh -a -z "$region_name" ]
	then
		# apparently already within polyMesh/
		mesh_dir=.
	else
		echo "Error: no appropriate 'polyMesh/' directory found" 1>&2
		exit 1
	fi
fi

# remove files (mesh itself, modifiers, snappyHexMesh ones) and subdirectories
# also remove .gz versions of the same files
echo "Cleaning ${case_dir:-.}/$mesh_dir" 1>&2

for i in \
	points \
	faces \
	owner \
	neighbour \
	cells \
	boundary \
	pointZones \
	faceZones \
	cellZones \
	meshModifiers \
	parallelData \
	sets \
	cellLevel \
	pointLevel \
	level0Edge \
	refinementHistory \
	surfaceIndex \
	;
do
	rm -rf $mesh_dir/$i $mesh_dir/$i.gz
done

# vim: set ft=sh noet sw=2 ts=2 sts=2:
